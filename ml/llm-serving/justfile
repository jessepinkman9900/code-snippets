set shell := ["bash", "-c"]

[private]
default:
    just --list

[group('aws')]
apply env='test':
  cd infra/terraform/environments/{{env}} && dotenvx run -f .env -- terraform apply

[group('aws')]
destroy env='test':
  cd infra/terraform/environments/{{env}} && dotenvx run -f .env -- terraform destroy

[group('local')]
ssh env='test':
  #!/usr/bin/env bash
  cd infra/terraform/environments/{{env}}
  KEY_PATH=$(terraform output -raw shh_private_key_local_path)
  USERNAME=$(terraform output -raw node_username)
  PUBLIC_IP=$(terraform output -raw node_public_ip)
  ssh -i "$KEY_PATH" "$USERNAME@$PUBLIC_IP"

[group('local')]
config-ssh env='test':
  #!/usr/bin/env bash
  cd infra/terraform/environments/{{env}}
  KEY_PATH=$(terraform output -raw shh_private_key_local_path)
  USERNAME=$(terraform output -raw node_username)
  PUBLIC_IP=$(terraform output -raw node_public_ip)
  env={{env}}
  
  # Remove existing entry if it exists
  sed -i '' "/^Host llm-serving-{{env}}-gpu-ec2$/,/^$/d" ~/.ssh/config
  
  # Add SSH config entry
  echo "" >> ~/.ssh/config
  echo "Host llm-serving-{{env}}-gpu-ec2" >> ~/.ssh/config
  echo "    HostName $PUBLIC_IP" >> ~/.ssh/config
  echo "    User $USERNAME" >> ~/.ssh/config
  echo "    IdentityFile $PWD/$KEY_PATH" >> ~/.ssh/config
  
  echo "Added SSH config entry: llm-serving-{{env}}-gpu-ec2"
  echo "You can now connect with: ssh llm-serving-{{env}}-gpu-ec2"

[group('remote')]
init email:
  #!/usr/bin/env bash
  git config --global user.email "{{email}}"
  # install mise
  sudo apt update -y && sudo apt install -y gpg sudo wget curl
  sudo install -dm 755 /etc/apt/keyrings
  wget -qO - https://mise.jdx.dev/gpg-key.pub | gpg --dearmor | sudo tee /etc/apt/keyrings/mise-archive-keyring.gpg 1> /dev/null
  echo "deb [signed-by=/etc/apt/keyrings/mise-archive-keyring.gpg arch=amd64] https://mise.jdx.dev/deb stable main" | sudo tee /etc/apt/sources.list.d/mise.list
  sudo apt update
  sudo apt install -y mise
  echo 'eval "$(/usr/bin/mise activate bash)"' >> ~/.bashrc
  # install deps
  mise trust
  mise install
  # source
  source ~/.bashrc
  # install tools
  sudo apt install -y htop sysstat net-tools
  # install python packages
  uv sync
  # install npm packages
  pnpm install

[group('remote')]
init-serving:
  # install vllm
  uv pip install vllm --torch-backend=auto

[group('vllm')]
vllm-up:
  cd docker && dotenvx run -f .env -- docker compose up -d

[group('vllm')]
vllm-lm-eval tasks='gsm8k':
  lm_eval --model local-completions --tasks {{tasks}} --model_args model=google/gemma-3-1b-it,base_url=http://localhost:8000/v1/completions,num_concurrent=8,max_retries=3,tokenized_requests=False

[group('promptfoo')]
pfoo-eval model='google/gemma-3-1b-it':
  mkdir -p ./promptfoo/evals && pnpm promptfoo eval --output ./promptfoo/evals/$(date +%Y%m%d%H%M%S)-{{model}}.html

[group('promptfoo')]
pfoo-model-scan model='google/gemma-3-1b-it':
  source .venv/bin/activate && pnpm promptfoo scan-model hf://{{model}}

[group('promptfoo')]
pfoo-view:
  pnpm promptfoo view ./promptfoo -y
